from pylons import config
from sqlalchemy import *
from sqlalchemy.orm import mapper, relation
from wiki20.model import metadata

# Normal tables may be defined and mapped at module level.
 
foo_table = Table("Foo", metadata,
     Column("id", types.Integer, primary_key=True),
     Column("bar", types.String(255), nullable=False),
     )

class Foo(object):
    def __init__(self, **kw):
        """automatically mapping attributes"""
        for key, value in kw.iteritems():
            setattr(self, key, value)

mapper(Foo, foo_table)

Classes for reflected tables may be defined here, but the table and
mapping itself must be done in the init_model function.


