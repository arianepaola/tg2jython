import logging

from pylons import request, response, session
from pylons import tmpl_context as c
from pylons.controllers.util import abort, redirect_to

{{importstatement}}
#import {{package}}.model as model

log = logging.getLogger(__name__)

class {{classname}}Controller(BaseController):
    """REST Controller styled on the Atom Publishing Protocol"""
    # To properly map this controller, ensure your config/routing.py file has
    # a resource setup:
    #     {{resource_command}}

    def index(self, format='html'):
        """GET /{{nameprefix}}{{pluralname}}: All items in the collection."""
        # url_for('{{nameprefix}}{{pluralname}}')
        pass

    def create(self):
        """POST /{{nameprefix}}{{pluralname}}: Create a new item."""
        # url_for('{{nameprefix}}{{pluralname}}')
        pass

    def new(self, format='html'):
        """GET /{{nameprefix}}{{pluralname}}/new: Form to create a new item."""
        # url_for('{{nameprefix}}new_{{singularname}}')
        pass

    def update(self, id):
        """PUT /{{nameprefix}}{{pluralname}}/id: Update an existing item."""
        # Forms posted to this method should contain a hidden field:
        #    <input type="hidden" name="_method" value="PUT" />
        # Or using helpers:
        #    h.form(h.url_for('{{nameprefix}}{{singularname}}', id=ID),
        #           method='put')
        # url_for('{{nameprefix}}{{singularname}}', id=ID)
        pass

    def delete(self, id):
        """DELETE /{{nameprefix}}{{pluralname}}/id: Delete an existing item."""
        # Forms posted to this method should contain a hidden field:
        #    <input type="hidden" name="_method" value="DELETE" />
        # Or using helpers:
        #    h.form(h.url_for('{{nameprefix}}{{singularname}}', id=ID),
        #           method='delete')
        # url_for('{{nameprefix}}{{singularname}}', id=ID)
        pass

    def show(self, id, format='html'):
        """GET /{{nameprefix}}{{pluralname}}/id: Show a specific item."""
        # url_for('{{nameprefix}}{{singularname}}', id=ID)
        pass

    def edit(self, id, format='html'):
        """GET /{{nameprefix}}{{pluralname}}/id/edit: Form to edit an existing item."""
        # url_for('{{nameprefix}}edit_{{singularname}}', id=ID)
        pass
